
CREATE COMPUTE MODULE XML2CSV_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		CREATE FIELD OutputRoot.DFDL.employe_xml_2_csv.header;
		CREATE FIELD OutputRoot.DFDL.employe_xml_2_csv.record;
		
		DECLARE recordRef REFERENCE TO OutputRoot.DFDL.employe_xml_2_csv;
		DECLARE headerRef REFERENCE TO OutputRoot.DFDL.employe_xml_2_csv.header;
		
		SET OutputRoot.Properties.MessageType = '{}:employe_xml_2_csv';

		DECLARE inRef REFERENCE TO InputRoot.XMLNSC.employees;

		CREATE LASTCHILD OF headerRef TYPE NameValue NAME 'id' VALUE 'id';
		CREATE LASTCHILD OF headerRef TYPE NameValue NAME 'firstName' VALUE 'firstName';
		CREATE LASTCHILD OF headerRef TYPE NameValue NAME 'lastName' VALUE 'lastName';
		CREATE LASTCHILD OF headerRef TYPE NameValue NAME 'email' VALUE 'email';
		CREATE LASTCHILD OF headerRef TYPE NameValue NAME 'position' VALUE 'position';
		CREATE LASTCHILD OF headerRef TYPE NameValue NAME 'salary' VALUE 'salary';

		DECLARE I INTEGER 1;
		FOR atEmployee AS InputRoot.XMLNSC.employees.employee[] DO
			CREATE LASTCHILD OF recordRef.record[I] TYPE NameValue NAME 'id' VALUE inRef.employee[I].id;
			CREATE LASTCHILD OF recordRef.record[I] TYPE NameValue NAME 'firstName' VALUE inRef.employee[I].firstName;
			CREATE LASTCHILD OF recordRef.record[I] TYPE NameValue NAME 'lastName' VALUE inRef.employee[I].lastName;
			CREATE LASTCHILD OF recordRef.record[I] TYPE NameValue NAME 'email' VALUE inRef.employee[I].email;
			CREATE LASTCHILD OF recordRef.record[I] TYPE NameValue NAME 'position' VALUE inRef.employee[I].position;
			CREATE LASTCHILD OF recordRef.record[I] TYPE NameValue NAME 'salary' VALUE inRef.employee[I].salary;
			SET I = I + 1;
		END FOR;
		RETURN TRUE;
	END;
END MODULE;